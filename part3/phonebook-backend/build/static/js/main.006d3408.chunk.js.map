{"version":3,"sources":["components/Filter.js","components/AddNewPerson.js","services/persons.js","components/PrintPhonebook.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","filterHandler","value","onChange","AddNewPerson","addPerson","newName","newNumber","handleNewPerson","handleNewNumber","onSubmit","type","baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","PrintPhonebook","persons","newFilter","setPersons","filteredPersons","person","name","toLowerCase","indexOf","map","key","number","onClick","window","confirm","personService","p","deletePerson","Notification","message","className","App","useState","setNewName","setNewNumber","setNewFilter","notification","setNotification","useEffect","initialPersons","event","target","preventDefault","setTimeout","some","personToChange","find","changedPerson","returnedPerson","catch","error","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.006d3408.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ filter, filterHandler }) => \n{\n  return (\n    <div>\n      filter shown with <input value={filter} onChange={filterHandler} />\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst AddNewPerson = ({ addPerson, newName, newNumber, handleNewPerson, handleNewNumber }) => \n{\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input value={newName} onChange={handleNewPerson} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNewNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default AddNewPerson","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n  }\n\nexport default { getAll, create, remove, update }","import React from 'react'\nimport personService from '../services/persons'\n\nconst PrintPhonebook = ({ persons, newFilter, setPersons }) => {\n  let filteredPersons = persons.filter((person) =>\n    person.name.toLowerCase().indexOf(newFilter.toLowerCase()) !== -1\n  )\n\n  const deletePerson = person => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n        .remove(person.id)\n        .then(response => {\n          setPersons(persons.filter(p => p.id !== person.id))\n        })\n    }\n  }\n\n  return (\n    <ul>\n      {filteredPersons.map(person =>\n        <li key={person.name}>\n          {person.name} {person.number}\n          {\" \"}\n          <button onClick={() => deletePerson(person)}>delete</button>\n        </li>\n      )}\n    </ul>\n  )\n}\n\nexport default PrintPhonebook","import React from 'react'\nimport '../index.css'\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n  if (type === null) {\n    return null\n  }\n\n  if (type === \"error\") {\n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n  else if (type === \"notification\") {\n    return (\n      <div className=\"notification\">\n        {message}\n      </div>\n    )\n  }\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter'\nimport AddNewPerson from './components/AddNewPerson'\nimport PrintPhonebook from './components/PrintPhonebook'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [notification, setNotification] = useState({ message: null, type: null })\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    if (newName === \"\") {\n      setNotification({ ...notification, message: `Error: name field cannot be empty`, type: \"error\" })\n      setTimeout(() => {\n        setNotification({ ...notification, message: null, type: null })\n      }, 5000)\n\n      return\n    }\n\n    if (newNumber === \"\") {\n      setNotification({ ...notification, message: `Error: number field cannot be empty`, type: \"error\" })\n      setTimeout(() => {\n        setNotification({ ...notification, message: null, type: null })\n      }, 5000)\n\n      return\n    }\n\n    if (persons.some(person => person.name === newName)) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const personToChange = persons.find(p => p.name === newName)\n        const changedPerson = { ...personToChange, number: newNumber }\n\n        personService\n          .update(personToChange.id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(p => p.id !== returnedPerson.id ? p : returnedPerson))\n\n            setNotification({ ...notification, message: `Updated ${returnedPerson.name}`, type: \"notification\" })\n            setTimeout(() => {\n              setNotification({ ...notification, message: null, type: null })\n            }, 5000)\n          })\n          .catch(error => {\n            setNotification({\n              ...notification,\n              message: `Error: Information of ${personToChange.name} has already been removed from the server`,\n              type: \"error\"\n            })\n            setTimeout(() => {\n              setNotification({ ...notification, message: null, type: null })\n            }, 5000)\n            setPersons(persons.filter(p => p.id !== personToChange.id))\n          })\n      }\n\n      return\n    }\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    personService\n      .create(newPerson)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n\n        setNotification({ ...notification, message: `Added ${returnedPerson.name}`, type: \"notification\" })\n        setTimeout(() => {\n          setNotification({ ...notification, message: null, type: null })\n        }, 5000)\n      })\n  }\n\n  const handleNewPerson = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleNewFilter = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification.message} type={notification.type} />\n      <Filter filter={newFilter} filterHandler={handleNewFilter} />\n      <h3>Add a new person</h3>\n      <AddNewPerson\n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        handleNewPerson={handleNewPerson}\n        handleNewNumber={handleNewNumber}\n      />\n      <h3>Numbers</h3>\n      <PrintPhonebook\n        persons={persons}\n        newFilter={newFilter}\n        setPersons={setPersons} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}